name: .NET

on:
  push:
    branches: [ main ]
    paths: [ 'src/**', '.github/workflows/**']
  pull_request:
    branches: [ '**' ]
    paths: [ 'src/**', '.github/workflows/**' ]

jobs:
  build:
    name: Build, Test, Pack
    runs-on: ubuntu-latest
    env:
      BUILD_CONFIGURATION: Release
    steps:
    - name: Checkout branch
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore tools
      run: dotnet tool restore
    - name: Restore dependencies
      run: dotnet restore
    - name: Calculate GitVersion
      id: gitversion
      run: |
        gitversion_json=$(dotnet tool run dotnet-gitversion)
        echo "$gitversion_json" | jq -r 'to_entries|map("::set-output name=\(.key)::\(.value|tostring)")|.[]'
    - name: Build
      run: >
        dotnet build --no-restore --configuration $BUILD_CONFIGURATION
        -p:AssemblyVersion=${{ steps.gitversion.outputs.MajorMinorPatch }}
        -p:InformationalVersion=${{ steps.gitversion.outputs.SemVer }}
    - name: Test
      run: dotnet test --no-build --configuration $BUILD_CONFIGURATION --verbosity normal
    - name: Pack
      run: >
        dotnet pack --no-build --configuration $BUILD_CONFIGURATION
        -p:PackageVersion=${{ steps.gitversion.outputs.NuGetVersionV2 }}
    - name: Upload NuGet Package Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: nuget-packages
        path: src/**/*.nupkg

  publish:
      name: Publish Packages
      runs-on: ubuntu-latest
      if: ${{ github.ref == 'refs/heads/main' }}
      needs: [ 'build' ]

      steps:
      - name: Download NuGet Package Artifacts
        uses: actions/download-artifact@v2
        with:
          name: nuget-packages
          path: nuget-packages
      - name: Publish NuGet Packages
        env:
          NUGET_API_KEY: ${{secrets.NUGET_API_KEY}}
          NUGET_PACKAGE_SOURCE: https://api.nuget.org/v3/index.json
        run: dotnet nuget push nuget-packages/**/*.nupkg --source $NUGET_PACKAGE_SOURCE --api-key $NUGET_API_KEY
